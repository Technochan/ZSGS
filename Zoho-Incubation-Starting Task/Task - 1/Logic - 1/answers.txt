cigarParty
public boolean cigarParty(int cigars, boolean isWeekend) {
  if( ((cigars >= 40 && cigars <= 60) && !isWeekend) || (cigars >= 40 && isWeekend))  return true;
  return false;
}


dateFashion
public int dateFashion(int you, int date) {
 if(you <= 2 || date <= 2) return 0;
 else if(you >= 8 || date >= 8) return 2;
 return 1;
}


squirrelPlay
public boolean squirrelPlay(int temp, boolean isSummer) {
  if((temp >= 60 && temp <= 90 && !isSummer) || (temp >= 60 && temp<= 100 && isSummer)) return true;
  return false;
}


caughtSpeeding
public int caughtSpeeding(int speed, boolean isBirthday) {
  if (isBirthday) {
    if (speed <= 65) return 0;
    if (speed <= 85) return 1;
 } else {
   if (speed <= 60) return 0;
   if (speed <= 80) return 1;
 }
 return 2;
}


sortaSum
public int sortaSum(int a, int b) {
  if( a+b >= 10 && a+b <= 19) return 20;
  return a+b;
}


alarmClock
public String alarmClock(int day, boolean vacation) {
  if(!vacation){
    if(day >= 1 && day <= 5) return "7:00";
    return "10:00";
  } else {
    if(day >= 1 && day <= 5) return "10:00";
  }
  return "off";
  
}


love6
public boolean love6(int a, int b) {
  return (a==6 || b==6) || a+b==6 || Math.abs(a-b)==6 ;
}


in1To10
public boolean in1To10(int n, boolean outsideMode) {
  if(!outsideMode){
    if(n>= 1 && n<= 10) return true;
  } else {
    if(n<= 1 || n >= 10) return true;
  }
  return false;
}


specialEleven
public boolean specialEleven(int n) {
  if( (n%11==0) || (n-1)%11 == 0 ) return true;
  return false;
}


more20
public boolean more20(int n) {
  if((n-1)%20 == 0 || (n-2)%20 == 0 ) return true;
  return false;
}


old35
public boolean old35(int n) {
  return n%3 == 0 ^ n%5==0 ;
}


less20
public boolean less20(int n) {
  return (n+1)%20==0 || (n+2)%20==0 ;
}


nearTen
public boolean nearTen(int num) {
  return num % 10 <= 2 || num % 10 >= 8 ;
}


teenSum
public int teenSum(int a, int b) {
  if ((a>= 13 && a<= 19)||(b>= 13 && b<= 19)) return 19 ;
  return a+b;
}


answerCell
public boolean answerCell(boolean isMorning, boolean isMom, boolean isAsleep) {
  if(!isMorning){
    if(!isAsleep ) return true;
    if(isAsleep) return false;
    if(isMom) return true;
  } else {
    if(isAsleep) return false;
    if(isMom) return true;
  }
  return false;
}


teaParty
public int teaParty(int tea, int candy) {
  if(tea < 5 || candy < 5) return 0;
  if((tea >= candy+candy) || (candy >= tea+tea)) return 2;
  return 1;

}


fizzString
public String fizzString(String str) {
  boolean F = str.startsWith("f");
  boolean B = str.endsWith("b");

  if (F && B) return "FizzBuzz";
  else if (F) return "Fizz";
  else if (B) return "Buzz";
  
  return str;
}


fizzString2
public String fizzString2(int n) {
  if(n%3 == 0 && n%5 == 0) return "FizzBuzz!";
  if(n%3 == 0) return "Fizz!";
  if(n%5 == 0) return "Buzz!";
  return n+"!";
}


twoAsOne
public boolean twoAsOne(int a, int b, int c) {
  return a+b == c || a+c == b || b+c == a;
}


inOrder
public boolean inOrder(int a, int b, int c, boolean bOk) {
  if(!bOk) return b > a && c > b;
  return c > b;
}


inOrderEqual
public boolean inOrderEqual(int a, int b, int c, boolean equalOk) {
  if(equalOk) return a <= b && b <= c   ;
  return  a < b && b < c ;
}


lastDigit
public boolean lastDigit(int a, int b, int c) {
  return a%10 == b%10 || b%10 == c%10 || a%10 == c%10 ;
}


lessBy10
public boolean lessBy10(int a, int b, int c) {
  return Math.abs(a-b) >= 10 || Math.abs(b-c) >= 10 || Math.abs(a-c) >= 10;
}


withoutDoubles
public int withoutDoubles(int die1, int die2, boolean noDoubles) {
  if(noDoubles){
    if(die1 == 6 && die2 == 6) return die1+1;
    return die1 == die2 ? (die1+die2)+1 : die1+die2;
  }
  return  die1+die2;
}


maxMod5
public int maxMod5(int a, int b) {
  if(a == b) return 0;
  if(a%5 == b%5)  return a > b ? b : a;
  return a > b ? a : b;
}


redTicket
public int redTicket(int a, int b, int c) {
  if(a == 2 && b == 2 && c == 2 ) return 10;
  if(a == b && b == c) return 5;
  if(a != b && a != c) return 1;
  return 0;
}


greenTicket
public int greenTicket(int a, int b, int c) {
  if(a == b && b == c) return 20;
  if(a == b || b == c || a == c) return 10;
  return 0;
}


blueTicket
public int blueTicket(int a, int b, int c) {
  if(a+b == 10 || b+c == 10 || c+a == 10) return 10;
  if((a+b == b+c + 10 || a+b == a+c + 10) ) return 5;
  return 0;
}


shareDigit
public boolean shareDigit(int a, int b) {
  return a/10 == b/10  ||  a%10 == b%10 || a/10 == b%10 || a%10 == b/10;
}


sumLimit
public int sumLimit(int a, int b) {
  if ((a+b+"").length() == String.valueOf(a).length()) return a+ b; 
  return a;
}
